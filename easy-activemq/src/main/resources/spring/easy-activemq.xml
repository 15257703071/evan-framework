<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <description>Jms的spring配置，所有子模块中如需要使用jms消息中间件的，需要加载该spring配置文件</description>
    <!-- ActiveMQ 连接工厂 -->
    <bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">
        <!-- ActiveMQ服务用户 -->
        <property name="userName" value="${activemq.userName}"/>
        <!-- ActiveMQ服务密码 -->
        <property name="password" value="${activemq.password}"/>
        <!-- 消息broker连接配置 -->
        <property name="brokerURL" value="${activemq.brokerURL}"/>
        <!-- 设置异步发送 -->
        <property name="useAsyncSend" value="${activemq.useAsyncSend}"/>
        <property name="redeliveryPolicy">
            <bean id="redeliveryPolicy" class="org.apache.activemq.RedeliveryPolicy">
                <!--是否在每次尝试重新发送失败后,增长这个等待时间-->
                <property name="useExponentialBackOff" value="true"></property>
                <!--重发次数,默认为6次-->
                <property name="maximumRedeliveries" value="${activemq.maximumRedeliveries}"></property>
                <!--重发时间间隔,默认为1秒-->
                <property name="initialRedeliveryDelay" value="1000"></property>
                <!--第一次失败后重新发送之前等待500毫秒,第二次失败再等待500 * 2毫秒-->
                <property name="backOffMultiplier" value="2"></property>
                <!--最大传送延迟，只在useExponentialBackOff为true时有效（V5.5），假设首次重连间隔为10ms，倍数为2，那么第 二次重连时间间隔为 20ms，第三次重连时间间隔为40ms，当重连时间间隔大的最大重连时间间隔时，以后每次重连时间间隔都为最大重连时间间隔。-->
                <property name="maximumRedeliveryDelay" value="1000"></property>
                <property name="queue" value=">"/>
            </bean>
        </property>
    </bean>

    <!-- 缓存session链接 -->
    <bean id="cachingConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
        <property name="targetConnectionFactory" ref="connectionFactory"/>
        <!-- Session缓存数量,这里属性也可以直接在这里配置 -->
        <property name="sessionCacheSize" value="${activemq.sessionCacheSize}"/>
    </bean>

    <!-- 定义JmsTemplate的Queue类型 -->
    <bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
        <constructor-arg ref="cachingConnectionFactory"/>
        <!-- 非pub/sub模型（发布/订阅），即队列模式 -->
        <property name="pubSubDomain" value="false"/>
        <!-- 发送模式  DeliveryMode.NON_PERSISTENT=1: 非持久
                      DeliveryMode.PERSISTENT=2: 持久 -->
        <property name="deliveryMode" value="${activemq.deliveryMode}"/>
        <property name="sessionAcknowledgeMode" value="${activemq.sessionAcknowledgeMode}"/>
        <property name="messageConverter">
            <bean class="org.springframework.jms.support.converter.SimpleMessageConverter"/>
        </property>
    </bean>

    <!-- 定义JmsTemplate的Topic类型 -->
    <bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate" lazy-init="true">
        <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
        <constructor-arg ref="cachingConnectionFactory"/>
        <!-- pub/sub模型（发布/订阅） -->
        <property name="pubSubDomain" value="true"/>
        <property name="deliveryMode" value="${activemq.deliveryMode}"/>
        <property name="sessionAcknowledgeMode" value="${activemq.sessionAcknowledgeMode}"/>
        <property name="messageConverter">
            <bean class="org.springframework.jms.support.converter.SimpleMessageConverter"/>
        </property>
    </bean>

    <bean id="topicProvider" class="com.ancun.core.easy.mq.provider.TopicProvider" lazy-init="true">
        <constructor-arg name="jmsTemplate" ref="jmsTopicTemplate"/>
    </bean>

    <bean id="queueProvider" class="com.ancun.core.easy.mq.provider.QueueProvider" lazy-init="true">
        <constructor-arg name="jmsTemplate" ref="jmsQueueTemplate"/>
    </bean>

    <bean id="activeMQConfig" class="com.ancun.core.easy.mq.ActiveMQConfig">
        <property name="consumers" value="${activemq.consumers}"/>
        <property name="sessionAcknowledgeMode" value="${activemq.sessionAcknowledgeMode}"/>
    </bean>

    <bean id="activeMQConsumer" class="com.ancun.core.easy.mq.consumer.DefaultActiveMQConsumer" lazy-init="true">
        <constructor-arg name="activeMQConfig" ref="activeMQConfig"/>
        <constructor-arg name="activeMQConnectionFactory" ref="connectionFactory"/>
    </bean>

    <bean id="amqClient" class="com.ancun.core.easy.mq.request_response.AmqClient" lazy-init="true">
        <constructor-arg name="jmsTemplate" ref="jmsQueueTemplate"/>
    </bean>

</beans>